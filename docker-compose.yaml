services:
  backend:
    build: ./backend
    container_name: hcm-chatbot-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/hcm_chatbot
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=your-secret-key
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./backend:/app
      - ./ml/models:/app/models
    depends_on:
      - postgres
      - redis
      - qdrant
    networks:
      - chatbot-network

  frontend:
    build: ./frontend
    container_name: hcm-chatbot-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - chatbot-network

  ml:
    build: ./ml
    container_name: hcm-chatbot-ml
    volumes:
      - ./ml:/app
      - ./data:/app/data
      - ./ml/models:/app/models
    environment:
      - CUDA_VISIBLE_DEVICES=0
    networks:
      - chatbot-network

  postgres:
    image: postgres:15
    container_name: hcm-chatbot-postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hcm_chatbot
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chatbot-network

  redis:
    image: redis:7-alpine
    container_name: hcm-chatbot-redis
    networks:
      - chatbot-network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: hcm-chatbot-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - chatbot-network

volumes:
  postgres_data:
  qdrant_data:

networks:
  chatbot-network:
    driver: bridge